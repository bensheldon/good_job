# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `mixlib-shellout` gem.
# Please instead update this file by running `bin/tapioca sync`.

# typed: true

module Mixlib
end

class Mixlib::ShellOut
  include(::Mixlib::ShellOut::Unix)

  def initialize(*command_args); end

  def command; end
  def cwd; end
  def cwd=(_arg0); end
  def domain; end
  def domain=(_arg0); end
  def elevated; end
  def elevated=(_arg0); end
  def environment; end
  def environment=(_arg0); end
  def error!; end
  def error?; end
  def execution_time; end
  def exitstatus; end
  def format_for_exception; end
  def gid; end
  def group; end
  def group=(_arg0); end
  def input; end
  def input=(_arg0); end
  def inspect; end
  def invalid!(msg = T.unsafe(nil)); end
  def live_stderr; end
  def live_stderr=(_arg0); end
  def live_stdout; end
  def live_stdout=(_arg0); end
  def live_stream; end
  def live_stream=(stream); end
  def log_level; end
  def log_level=(_arg0); end
  def log_tag; end
  def log_tag=(_arg0); end
  def logger; end
  def logger=(_arg0); end
  def login; end
  def login=(_arg0); end
  def password; end
  def password=(_arg0); end
  def process_status_pipe; end
  def run_command; end
  def sensitive; end
  def sensitive=(_arg0); end
  def status; end
  def stderr; end
  def stderr_pipe; end
  def stdin_pipe; end
  def stdout; end
  def stdout_pipe; end
  def timeout; end
  def timeout=(_arg0); end
  def uid; end
  def umask; end
  def umask=(new_umask); end
  def user; end
  def user=(_arg0); end
  def valid_exit_codes; end
  def valid_exit_codes=(_arg0); end
  def with_logon; end
  def with_logon=(_arg0); end

  private

  def parse_options(opts); end
  def validate_options(opts); end
end

class Mixlib::ShellOut::CommandTimeout < ::Mixlib::ShellOut::Error
end

Mixlib::ShellOut::DEFAULT_READ_TIMEOUT = T.let(T.unsafe(nil), Integer)

class Mixlib::ShellOut::EmptyWindowsCommand < ::Mixlib::ShellOut::ShellCommandFailed
end

class Mixlib::ShellOut::Error < ::RuntimeError
end

class Mixlib::ShellOut::InvalidCommandOption < ::Mixlib::ShellOut::Error
end

Mixlib::ShellOut::READ_SIZE = T.let(T.unsafe(nil), Integer)

Mixlib::ShellOut::READ_WAIT_TIME = T.let(T.unsafe(nil), Float)

class Mixlib::ShellOut::ShellCommandFailed < ::Mixlib::ShellOut::Error
end

module Mixlib::ShellOut::Unix
  def all_seconderies; end
  def logon_environment; end
  def process_environment; end
  def run_command; end
  def sgids; end
  def using_login?; end
  def validate_options(opts); end

  private

  def attempt_buffer_read; end
  def attempt_reap; end
  def child_pgid; end
  def child_process_status; end
  def child_stderr; end
  def child_stdin; end
  def child_stdout; end
  def close_all_pipes; end
  def configure_parent_process_file_descriptors; end
  def configure_subprocess_file_descriptors; end
  def fork_subprocess; end
  def initialize_ipc; end
  def open_pipes; end
  def propagate_pre_exec_failure; end
  def read_process_status_to_buffer; end
  def read_stderr_to_buffer; end
  def read_stdout_to_buffer; end
  def reap; end
  def reap_errant_child; end
  def set_cwd; end
  def set_environment; end
  def set_group; end
  def set_secondarygroups; end
  def set_umask; end
  def set_user; end
  def should_reap?; end
  def write_to_child_stdin; end
end

Mixlib::ShellOut::Unix::ONE_DOT_EIGHT_DOT_SEVEN = T.let(T.unsafe(nil), String)
