# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/et-orbi/all/et-orbi.rbi
#
# et-orbi-1.2.5

module EtOrbi
  def self._make_info; end
  def self._os_zone; end
  def self._os_zone=(arg0); end
  def self.centos_tz; end
  def self.chronic_enabled=(b); end
  def self.chronic_enabled?; end
  def self.chronic_parse(str, opts); end
  def self.create_offset_tzone(utc_off, id); end
  def self.custom_tzs; end
  def self.debian_tz; end
  def self.determine_local_tzone; end
  def self.determine_local_tzones; end
  def self.extract_zone(str); end
  def self.gather_tzs; end
  def self.get_as_tzone(t); end
  def self.get_local_tzone(t); end
  def self.get_offset_tzone(str); end
  def self.get_tzinfo_tzone(name); end
  def self.get_tzone(o); end
  def self.get_x_offset_tzone(str); end
  def self.list_iso8601_zones(s); end
  def self.make(*a); end
  def self.make_from_array(a, zone); end
  def self.make_from_date(d, zone); end
  def self.make_from_eotime(eot, zone); end
  def self.make_from_numeric(f, zone); end
  def self.make_from_string(s, zone); end
  def self.make_from_time(t, zone); end
  def self.make_time(*a); end
  def self.normalize(name); end
  def self.now(zone = nil); end
  def self.os_tz; end
  def self.osx_tz; end
  def self.parse(str, opts = nil); end
  def self.platform_info; end
  def self.render_nozone_time(seconds); end
  def self.to_offset(n); end
  def self.tweak_zone_name(name); end
  def self.tz_all; end
  def self.tzinfo_data_version; end
  def self.tzinfo_version; end
  def self.unzz(name); end
  def self.windows_zone_code_x(zone_name); end
  def self.windows_zone_name(zone_name, time); end
  def self.zone; end
end
class EtOrbi::EoTime
  def +(t); end
  def -(t); end
  def <(o); end
  def <=(o); end
  def <=>(o); end
  def ==(o); end
  def >(o); end
  def >=(o); end
  def _to_f(o); end
  def add(t); end
  def ambiguous?; end
  def asctime; end
  def count_weeks(dir); end
  def day; end
  def getgm; end
  def getutc; end
  def hour; end
  def in_time_zone(zone = nil); end
  def inc(t, dir = nil); end
  def initialize(s, zone); end
  def is_dst?; end
  def isdst; end
  def iso8601(fraction_digits = nil); end
  def localtime(zone = nil); end
  def min; end
  def month; end
  def monthdays; end
  def rday; end
  def reach(points); end
  def rweek; end
  def sec; end
  def seconds; end
  def seconds=(f); end
  def self.get_tzone(o); end
  def self.local(*a); end
  def self.local_tzone; end
  def self.make(o); end
  def self.now(zone = nil); end
  def self.parse(str, opts = nil); end
  def self.platform_info; end
  def self.utc(*a); end
  def strftime(format); end
  def strfz(code); end
  def subtract(t); end
  def to_debug_s; end
  def to_f; end
  def to_i; end
  def to_local_time; end
  def to_s; end
  def to_t; end
  def to_time; end
  def to_time_s; end
  def to_utc_comparison_s; end
  def to_utc_time; end
  def to_zs; end
  def translate(zone = nil); end
  def usec; end
  def utc; end
  def utc?; end
  def utc_offset; end
  def wday; end
  def wday_in_month; end
  def yday; end
  def year; end
  def zone; end
  def zone=(z); end
end
