# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/faraday-em_http/all/faraday-em_http.rbi
#
# faraday-em_http-1.0.0

module Faraday
end
class Faraday::Adapter
end
class Faraday::Adapter::EMHttp < Faraday::Adapter
  def call(env); end
  def create_request(env); end
  def error_message(client); end
  def parallel?(env); end
  def perform_request(env); end
  def perform_single_request(env); end
  def raise_error(msg); end
  def self.setup_parallel_manager(_options = nil); end
  def timeout_message?(msg); end
  include Faraday::Adapter::EMHttp::Options
end
module Faraday::Adapter::EMHttp::Options
  def configure_compression(options, env); end
  def configure_proxy(options, env); end
  def configure_socket(options, env); end
  def configure_ssl(options, env); end
  def configure_timeout(options, env); end
  def connection_config(env); end
  def read_body(env); end
  def request_config(env); end
  def request_options(env); end
end
class Faraday::Adapter::EMHttp::Manager
  def add(&block); end
  def check_finished; end
  def initialize; end
  def perform_request; end
  def reset; end
  def run; end
  def running?; end
end
module Faraday::EmHttp
end
