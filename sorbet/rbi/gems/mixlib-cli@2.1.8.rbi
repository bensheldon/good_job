# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `mixlib-cli` gem.
# Please instead update this file by running `bin/tapioca sync`.

# typed: strict

module Mixlib
end

module Mixlib::CLI
  mixes_in_class_methods(::Mixlib::CLI::InheritMethods)

  def initialize(*args); end

  def banner; end
  def banner=(_arg0); end
  def build_option_arguments(opt_setting); end
  def cli_arguments; end
  def cli_arguments=(_arg0); end
  def config; end
  def config=(_arg0); end
  def default_config; end
  def default_config=(_arg0); end
  def handle_deprecated_options(show_deprecations); end
  def opt_parser; end
  def options; end
  def options=(_arg0); end
  def parse_options(argv = T.unsafe(nil), show_deprecations: T.unsafe(nil)); end

  class << self
    def included(receiver); end
  end
end

module Mixlib::CLI::ClassMethods
  def banner(bstring = T.unsafe(nil)); end
  def deprecated_option(name, replacement: T.unsafe(nil), long: T.unsafe(nil), short: T.unsafe(nil), boolean: T.unsafe(nil), value_mapper: T.unsafe(nil), keep: T.unsafe(nil)); end
  def option(name, args); end
  def options; end
  def options=(val); end
  def use_separate_default_options(true_or_false); end
  def use_separate_defaults?; end
end

class Mixlib::CLI::Formatter
  class << self
    def combined_option_display_name(short, long); end
    def friendly_opt_list(opt_array); end
  end
end

module Mixlib::CLI::InheritMethods
  def deep_dup(object); end
  def inherited(receiver); end
end
