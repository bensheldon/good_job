# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ast/all/ast.rbi
#
# ast-2.4.2

module AST
end
class AST::Node
  def +(array); end
  def <<(element); end
  def ==(other); end
  def append(element); end
  def assign_properties(properties); end
  def children; end
  def clone; end
  def concat(array); end
  def deconstruct; end
  def dup; end
  def eql?(other); end
  def fancy_type; end
  def hash; end
  def initialize(type, children = nil, properties = nil); end
  def inspect(indent = nil); end
  def original_dup; end
  def to_a; end
  def to_ast; end
  def to_s(indent = nil); end
  def to_sexp(indent = nil); end
  def to_sexp_array; end
  def type; end
  def updated(type = nil, children = nil, properties = nil); end
end
class AST::Processor
  include AST::Processor::Mixin
end
module AST::Processor::Mixin
  def handler_missing(node); end
  def process(node); end
  def process_all(nodes); end
end
module AST::Sexp
  def s(type, *children); end
end
