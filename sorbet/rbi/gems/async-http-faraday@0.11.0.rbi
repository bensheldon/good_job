# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `async-http-faraday` gem.
# Please instead update this file by running `bin/tapioca gem async-http-faraday`.

module Async
  extend ::Console

  class << self
    # Invoke `Reactor.run` with all arguments/block.
    def run(*arguments, &block); end
  end
end

module Async::HTTP; end
Async::HTTP::DEFAULT_RETRIES = T.let(T.unsafe(nil), Integer)
module Async::HTTP::Faraday; end

class Async::HTTP::Faraday::Adapter < ::Faraday::Adapter
  # @return [Adapter] a new instance of Adapter
  def initialize(*arguments, timeout: T.unsafe(nil), **options, &block); end

  def call(env); end
  def client_for(endpoint); end
  def close; end
  def host_key(endpoint); end
  def make_client(endpoint); end
  def proxy_client_for(proxy_endpoint, endpoint); end

  private

  def with_timeout(task: T.unsafe(nil)); end
end

Async::HTTP::Faraday::Adapter::CONNECTION_EXCEPTIONS = T.let(T.unsafe(nil), Array)
Async::HTTP::Faraday::VERSION = T.let(T.unsafe(nil), String)
Async::VERSION = T.let(T.unsafe(nil), String)

class Sawyer::Agent
  def initialize(endpoint, options = T.unsafe(nil)); end

  def allow_undefined_methods; end
  def allow_undefined_methods=(_arg0); end
  def allow_undefined_methods?; end
  def call(method, url, data = T.unsafe(nil), options = T.unsafe(nil)); end
  def close; end
  def decode_body(str); end
  def encode_body(data); end
  def expand_url(url, options = T.unsafe(nil)); end
  def inspect; end
  def links_parser; end
  def links_parser=(_arg0); end
  def marshal_dump; end
  def marshal_load(dumped); end
  def parse_links(data); end
  def rels; end
  def root; end
  def start; end
  def to_yaml_properties; end

  class << self
    def decode(data); end
    def encode(data); end
    def serializer; end
    def serializer=(_arg0); end
  end
end

Sawyer::Agent::NO_BODY = T.let(T.unsafe(nil), Set)
