# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `rspec-rails` gem.
# Please instead update this file by running `bin/tapioca gem rspec-rails`.

# Namespace for all core RSpec projects.
module RSpec; end

# Namespace for rspec-rails code.
module RSpec::Rails; end

# @private
module RSpec::Rails::FeatureCheck
  private

  def has_action_cable_testing?; end
  def has_action_mailbox?; end
  def has_action_mailer?; end
  def has_action_mailer_parameterized?; end
  def has_action_mailer_preview?; end
  def has_action_mailer_unified_delivery?; end
  def has_active_job?; end
  def has_active_record?; end
  def has_active_record_migration?; end
  def type_metatag(type); end

  class << self
    # @return [Boolean]
    def has_action_cable_testing?; end

    # @return [Boolean]
    def has_action_mailbox?; end

    # @return [Boolean]
    def has_action_mailer?; end

    # @return [Boolean]
    def has_action_mailer_parameterized?; end

    # @return [Boolean]
    def has_action_mailer_preview?; end

    # @return [Boolean]
    def has_action_mailer_unified_delivery?; end

    # @return [Boolean]
    def has_active_job?; end

    # @return [Boolean]
    def has_active_record?; end

    # @return [Boolean]
    def has_active_record_migration?; end

    def type_metatag(type); end
  end
end

# Railtie to hook into Rails.
class RSpec::Rails::Railtie < ::Rails::Railtie
  private

  def config_default_preview_path(options); end

  # @return [Boolean]
  def config_preview_path?(options); end

  def setup_preview_path(app); end

  # @return [Boolean]
  def supports_action_mailer_previews?(config); end
end
