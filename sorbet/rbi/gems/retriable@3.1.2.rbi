# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `retriable` gem.
# Please instead update this file by running `bin/tapioca sync`.

# typed: true

module Retriable

  private

  def config; end
  def configure; end
  def retriable(opts = T.unsafe(nil)); end
  def with_context(context_key, options = T.unsafe(nil), &block); end

  class << self
    def config; end
    def configure; end
    def retriable(opts = T.unsafe(nil)); end
    def with_context(context_key, options = T.unsafe(nil), &block); end
  end
end

class Retriable::Config
  def initialize(opts = T.unsafe(nil)); end

  def base_interval; end
  def base_interval=(_arg0); end
  def contexts; end
  def contexts=(_arg0); end
  def intervals; end
  def intervals=(_arg0); end
  def max_elapsed_time; end
  def max_elapsed_time=(_arg0); end
  def max_interval; end
  def max_interval=(_arg0); end
  def multiplier; end
  def multiplier=(_arg0); end
  def on; end
  def on=(_arg0); end
  def on_retry; end
  def on_retry=(_arg0); end
  def rand_factor; end
  def rand_factor=(_arg0); end
  def sleep_disabled; end
  def sleep_disabled=(_arg0); end
  def timeout; end
  def timeout=(_arg0); end
  def to_h; end
  def tries; end
  def tries=(_arg0); end
end

Retriable::Config::ATTRIBUTES = T.let(T.unsafe(nil), Array)

class Retriable::ExponentialBackoff
  def initialize(opts = T.unsafe(nil)); end

  def base_interval; end
  def base_interval=(_arg0); end
  def intervals; end
  def max_interval; end
  def max_interval=(_arg0); end
  def multiplier; end
  def multiplier=(_arg0); end
  def rand_factor; end
  def rand_factor=(_arg0); end
  def tries; end
  def tries=(_arg0); end

  private

  def randomize(interval); end
end

Retriable::ExponentialBackoff::ATTRIBUTES = T.let(T.unsafe(nil), Array)

Retriable::VERSION = T.let(T.unsafe(nil), String)
