# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `traces` gem.
# Please instead update this file by running `bin/tapioca gem traces`.


# source://traces//lib/traces/config.rb#6
module Traces
  class << self
    # Extend the specified class in order to emit traces.
    #
    # source://traces//lib/traces/provider.rb#42
    def Provider(klass, &block); end

    # This is a default implementation, which can be replaced by the backend.
    #
    # @return [Boolean]
    #
    # source://traces//lib/traces/backend.rb#21
    def active?; end

    # @return [Boolean]
    #
    # source://traces//lib/traces/provider.rb#10
    def enabled?; end

    # This is a default implementation, which can be replaced by the backend.
    #
    # source://traces//lib/traces/backend.rb#15
    def trace_context; end
  end
end

# The backend implementation is responsible for recording and reporting traces.
#
# source://traces//lib/traces/backend.rb#10
module Traces::Backend; end

# Represents a configuration for the traces library.
#
# source://traces//lib/traces/config.rb#8
class Traces::Config
  # Prepare the backend, e.g. by loading additional libraries or instrumentation.
  #
  # source://traces//lib/traces/config.rb#31
  def prepare; end

  # Require a specific traces backend implementation.
  #
  # source://traces//lib/traces/config.rb#35
  def require_backend(env = T.unsafe(nil)); end

  class << self
    # Load the default configuration.
    #
    # source://traces//lib/traces/config.rb#26
    def default; end

    # Load the configuration from the given path.
    #
    # source://traces//lib/traces/config.rb#14
    def load(path); end
  end
end

# Load the default configuration.
#
# source://traces//lib/traces/config.rb#53
Traces::Config::DEFAULT = T.let(T.unsafe(nil), Traces::Config)

# source://traces//lib/traces/config.rb#9
Traces::Config::DEFAULT_PATH = T.let(T.unsafe(nil), String)

# source://traces//lib/traces/provider.rb#15
module Traces::Provider; end

# source://traces//lib/traces/provider.rb#18
module Traces::Singleton
  # A module which contains tracing specific wrappers.
  #
  # source://traces//lib/traces/provider.rb#20
  def traces_provider; end
end
