# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/nio4r/all/nio4r.rbi
#
# nio4r-2.5.8

module NIO
  def self.engine; end
  def self.pure?(env = nil); end
end
class NIO::Selector
  def backend; end
  def close; end
  def closed?; end
  def deregister(arg0); end
  def empty?; end
  def initialize(*arg0); end
  def register(arg0, arg1); end
  def registered?(arg0); end
  def select(*arg0); end
  def self.backends; end
  def wakeup; end
end
class NIO::Monitor
  def add_interest(arg0); end
  def close(*arg0); end
  def closed?; end
  def initialize(arg0, arg1, arg2); end
  def interests; end
  def interests=(arg0); end
  def io; end
  def readable?; end
  def readiness; end
  def remove_interest(arg0); end
  def selector; end
  def value; end
  def value=(arg0); end
  def writable?; end
  def writeable?; end
end
class NIO::ByteBuffer
  def <<(arg0); end
  def [](arg0); end
  def capacity; end
  def clear; end
  def compact; end
  def each; end
  def flip; end
  def full?; end
  def get(*arg0); end
  def initialize(arg0); end
  def inspect; end
  def limit; end
  def limit=(arg0); end
  def mark; end
  def position; end
  def position=(arg0); end
  def read_from(arg0); end
  def remaining; end
  def reset; end
  def rewind; end
  def size; end
  def write_to(arg0); end
end
