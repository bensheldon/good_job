# frozen_string_literal: true

class CreateGoodJobBatches < ActiveRecord::Migration<%= migration_version %>
  def change
    # Ensure this incremental update migration is idempotent
    # with monolithic install migration.
    unless connection.table_exists?(:good_job_batches)
      create_table :good_job_batches, id: :uuid do |t|
        t.timestamps
        t.text :description
        t.jsonb :serialized_properties
        t.text :on_finish
        t.text :on_success
        t.text :on_discard
        t.text :callback_queue_name
        t.integer :callback_priority
        t.datetime :enqueued_at
        t.datetime :discarded_at
        t.datetime :finished_at
      end

      # good_jobs table changes
      add_column :good_jobs, :batch_id, :uuid
      add_column :good_jobs, :batch_callback_id, :uuid

      add_index :good_jobs, :batch_id, where: "batch_id IS NOT NULL"
      add_index :good_jobs, :batch_callback_id, where: "batch_callback_id IS NOT NULL"
    end
  end
end
