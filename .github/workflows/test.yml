name: Test
on:
  push:
    branches:
      - master
  pull_request:
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      DISABLE_SPRING: 1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Dependencies
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      # Lint
      - name: Run linter
        run: bin/lint --nofix

  test:
    name: Test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        ruby: [2.5, 2.6, 2.7, 3.0, jruby-9.2, jruby-9.3]
        pg: [14]
        include:
          - ruby: 3.0
            pg: 10
          - ruby: 3.0
            pg: 11
          - ruby: 3.0
            pg: 12
          - ruby: 3.0
            pg: 13
          - ruby: jruby-9.3
            pg: 10
          - ruby: jruby-9.3
            pg: 11
          - ruby: jruby-9.3
            pg: 12
          - ruby: jruby-9.3
            pg: 13
    env:
      PGHOST: localhost
      PGUSER: good_job
      RAILS_ENV: test
      BUNDLE_JOBS: 4
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      BUNDLE_WITHOUT: lint
      DISABLE_SPRING: 1
      RAILS_LOG_TO_STDOUT: false
    services:
      postgres:
        image: postgres:${{ matrix.pg }}
        env:
          POSTGRES_USER: good_job
          POSTGRES_DB: good_job_test
          POSTGRES_PASSWORD: ""
          POSTGRES_HOST_AUTH_METHOD: trust
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Update .ruby-version with matrix value
        run: echo "${{ matrix.ruby }}" >| .ruby-version

      # Dependencies
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
      - name: Cache Appraisal gems
        uses: actions/cache@v1
        with:
          path: gemfiles/vendor/bundle
          key: v1-bundler-${{ runner.os }}-${{ matrix.ruby }}-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            v1-bundler-${{ runner.os }}-${{ matrix.ruby }}-
      - name: Install Appraisal gems
        run: bundle exec appraisal install

      # Test
      - name: Set up test database
        run: bin/rails db:test:prepare
        working-directory: spec/test_app
      - name: Run Unit tests
        run: |
          bundle exec appraisal rspec --exclude-pattern "spec/system/**/*_spec.rb, spec/generators/**/*_spec.rb" \
                                      --require ./spec/support/pre_documentation_formatter.rb \
                                      --format PreDocumentationFormatter
      - name: Run System tests
        run: |
          bundle exec appraisal rspec --require ./spec/support/pre_documentation_formatter.rb \
                                      --format PreDocumentationFormatter \
                                      spec/system

      - name: Run Generators tests
        run: |
          bundle exec appraisal rspec --require ./spec/support/pre_documentation_formatter.rb \
                                      --format PreDocumentationFormatter \
                                      spec/generators

      # Archive
      - name: Archive system spec screenshots
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: screenshots
          path: spec/test_app/tmp/screenshots
      - name: Archive Rails logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: rails_logs
          path: spec/test_app/log
